<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Keras on Yet Another Iteration</title>
    <link>/tags/keras/</link>
    <description>Recent content in Keras on Yet Another Iteration</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 25 Jan 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/keras/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Tensorflow and Keras with R</title>
      <link>/2019/01/tensorflow-and-keras-with-r/</link>
      <pubDate>Fri, 25 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/01/tensorflow-and-keras-with-r/</guid>
      <description>I’ll start series of post about Keras, a high-level neural networks API developed with a focus on enabling fast experimentation, running on top of TensorFlow, but using its R interface. To start, we’ll review our LeNet implemantation with MXNET for MNIST problem, a traditional “Hello World” in the Neural Network world.
About Keras in RKeras is an API for building neural networks written in Python capable of running on top of Tensorflow, CNTK, or Theano.</description>
    </item>
    
  </channel>
</rss>